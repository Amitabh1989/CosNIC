# Generated by Django 5.1 on 2024-08-12 02:24

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CDCheckout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "board_pkg_dir_old",
                    models.CharField(
                        default="/root/fw_dup_withcfg_old/NXE/lx/l64", max_length=100
                    ),
                ),
                (
                    "board_pkg_file_name_old",
                    models.CharField(
                        default="/root/fw_dup_withcfg_old/NXE/lx/l64/Th57414_2x25.pkg",
                        max_length=100,
                    ),
                ),
                (
                    "board_pkg_dir",
                    models.CharField(
                        default="/root/fw_dup_withcfg/NXE/lx/l64/", max_length=100
                    ),
                ),
                (
                    "board_pkg_file_name",
                    models.CharField(
                        default="/root/fw_dup_withcfg/NXE/lx/l64/Th57414_2x25.pkg",
                        max_length=100,
                    ),
                ),
                (
                    "bnxt_en_rpm_path",
                    models.CharField(
                        default="/root/kmod-bnxt_en-1.10.0-215.0.154.0.rhel7u6.x86_64.rpm",
                        max_length=100,
                    ),
                ),
                (
                    "bnxt_en_rpm_path_old",
                    models.CharField(
                        default="/root/kmod-bnxt_en-1.10.0-215.0.131.0.rhel7u6.x86_64.rpm",
                        max_length=100,
                    ),
                ),
                (
                    "bnxt_re_rpm_path",
                    models.CharField(
                        default="/root/libbnxt_re-215.0.153.0-rhel7u6.x86_64.rpm",
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientSit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("release_version", models.CharField(max_length=100)),
                ("release_stream", models.CharField(max_length=100)),
                (
                    "release_path",
                    models.URLField(
                        default="http://eca-ccxsw.lvn.broadcom.net/releases/nxe/SIT/"
                    ),
                ),
                ("thor2_crid", models.CharField(default="CRID_0001", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Dup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dup_prg_path",
                    models.CharField(
                        default="/home/nic/Network_Firmware_0MRR3_LN64_22.71.11.13_jho227x06.BIN",
                        max_length=100,
                    ),
                ),
                (
                    "prg_path_prev",
                    models.CharField(
                        default="/home/nic/Network_Firmware_0MRR3_LN64_22.61.10.70_CavX11.BIN",
                        max_length=150,
                    ),
                ),
                (
                    "prg_path_prev2",
                    models.CharField(
                        default="/home/nic/Network_Firmware_0MRR3_LN64_22.71.11.13_jho227x06.BIN",
                        max_length=150,
                    ),
                ),
                (
                    "supported_macs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=list,
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FwUpgradeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "upgrade_type",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=["repave", "upgrade", "downgrade"],
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FwVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "version",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100), size=None
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Interface",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mac_addr", models.CharField(max_length=25)),
                ("mtu", models.IntegerField(default=1500)),
                ("switchport_num", models.CharField(max_length=100)),
                ("driver", models.CharField(default="bnxt_en", max_length=100)),
                ("roce_driver", models.CharField(default="bnxt_re", max_length=100)),
                ("pci_slot_gen", models.IntegerField(default=3)),
                ("total_phy_ports_on_adapter", models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name="Ipmi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nickname", models.CharField(max_length=100)),
                ("ipmi_host", models.CharField(max_length=100)),
                ("ip_addr", models.GenericIPAddressField()),
                ("username", models.CharField(max_length=100)),
                ("password", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Npar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "npar_functions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), default=[8, 8], size=None
                    ),
                ),
                ("num_vfs", models.IntegerField(default=4)),
            ],
        ),
        migrations.CreateModel(
            name="PrePostValidation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("speed", models.BooleanField(default=False)),
                ("dmesg", models.BooleanField(default=False)),
                ("ping", models.BooleanField(default=False)),
                ("stats", models.BooleanField(default=False)),
                ("generate_coredump", models.BooleanField(default=False)),
                ("decode_coredump", models.BooleanField(default=False)),
                ("coredump_on_client", models.BooleanField(default=False)),
                ("idle_check", models.BooleanField(default=False)),
                ("health_status", models.BooleanField(default=False)),
                ("racadm_attrs", models.BooleanField(default=False)),
                ("kmemleaks", models.BooleanField(default=False)),
                ("nvm_restore", models.BooleanField(default=False)),
                ("generate_bcm_sosreport", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Rmii",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rmii_interface",
                    models.CharField(default="00:0a:f7:b8:b5:75", max_length=30),
                ),
                ("instance_id", models.IntegerField(max_length=100)),
                ("auto_increment", models.CharField(default="\x01", max_length=100)),
                (
                    "bmc_interface",
                    models.CharField(default="00:62:0b:1a:28:31", max_length=30),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("release_version", models.CharField(max_length=100)),
                ("release_stream", models.CharField(max_length=100)),
                (
                    "release_path",
                    models.URLField(
                        default="http://eca-ccxsw.lvn.broadcom.net/releases/nxe/SIT/"
                    ),
                ),
                (
                    "driver_dir",
                    models.CharField(default="Linux_Driver/", max_length=200),
                ),
                (
                    "restructured_driver_dir",
                    models.CharField(default="drivers_linux/bnxt_en/", max_length=200),
                ),
                (
                    "driver_format",
                    models.CharField(default="bnxt_en-.*.tar.gz", max_length=100),
                ),
                (
                    "restructured_sit_ver",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100), size=None
                    ),
                ),
                ("thor2_crid", models.CharField(default="CRID_0001", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="SPLPkgFilePath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "spl_pkg_file_path",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=list,
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SwitchConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("switch_topology", models.BooleanField(default=False)),
                ("switch_ip", models.GenericIPAddressField()),
                ("switch_username", models.CharField(default="admin", max_length=100)),
                (
                    "switch_password",
                    models.CharField(blank=True, default="admin", max_length=100),
                ),
                (
                    "bond_modes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                (
                    "portchannel_no",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Switches",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("switch_ip", models.GenericIPAddressField()),
                ("switch_username", models.CharField(max_length=100)),
                ("switch_password", models.CharField(max_length=100)),
                (
                    "bond_modes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                (
                    "portchannel_no",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mgmt_ip_addr", models.GenericIPAddressField()),
                ("name", models.CharField(max_length=100)),
                ("iface_list", models.ManyToManyField(to="sutclient.interface")),
            ],
        ),
        migrations.CreateModel(
            name="Sut",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nickname", models.CharField(max_length=100)),
                ("mgmt_ip_addr", models.GenericIPAddressField()),
                ("name", models.CharField(max_length=100)),
                ("iface_list", models.ManyToManyField(to="sutclient.interface")),
                (
                    "ipmi",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sutclient.ipmi"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="interface",
            name="switch_details",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="sutclient.switchconfig"
            ),
        ),
        migrations.CreateModel(
            name="Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nickname", models.CharField(max_length=100)),
                ("backup_restore_config_files", models.BooleanField(default=False)),
                ("validate_config_params", models.BooleanField(default=False)),
                ("os_platform", models.CharField(max_length=100)),
                ("rpyc_port", models.IntegerField(default=2726)),
                ("topology", models.CharField(default="sut-client", max_length=100)),
                ("card_type", models.CharField(default="SR", max_length=100)),
                ("rmii_interface", models.CharField(max_length=100)),
                ("instance_id", models.IntegerField()),
                ("auto_increment", models.CharField(max_length=100)),
                ("bmc_interface", models.CharField(max_length=100)),
                ("load_roce_driver", models.BooleanField(default=False)),
                ("inbox_driver", models.BooleanField(default=False)),
                ("driver_name", models.CharField(default="bnxtnd", max_length=100)),
                ("repave", models.BooleanField(default=False)),
                (
                    "mtu_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), default=list, size=None
                    ),
                ),
                (
                    "vlan_id_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), default=list, size=None
                    ),
                ),
                ("vm_os", models.CharField(default="rhel86_legacy", max_length=100)),
                ("vfs_per_pf", models.IntegerField(default=8)),
                ("vnic_per_vm", models.IntegerField(default=8)),
                ("number_of_vms_to_test", models.IntegerField(default=3)),
                (
                    "errors_to_flag",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=[
                            "Call Trace",
                            "Error (timeout:",
                            "Requesting MSI-X vectors failed",
                            "Received firmware debug notification",
                            "(Unknown speed)",
                        ],
                        size=None,
                    ),
                ),
                ("fw_reset_check", models.BooleanField(default=True)),
                ("error_recovery_check", models.BooleanField(default=True)),
                ("cleanup_on_failure", models.BooleanField(default=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_1",
                        to="sutclient.client",
                    ),
                ),
                (
                    "client_2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_2",
                        to="sutclient.client",
                    ),
                ),
                (
                    "client_sit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_sit",
                        to="sutclient.clientsit",
                    ),
                ),
                (
                    "fw_upgrade_types",
                    models.ManyToManyField(to="sutclient.fwupgradetype"),
                ),
                ("fw_version", models.ManyToManyField(to="sutclient.fwversion")),
                (
                    "sit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sutclient.sit"
                    ),
                ),
                (
                    "spl_pkg_file_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sutclient.splpkgfilepath",
                    ),
                ),
                (
                    "sut",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sutclient.sut"
                    ),
                ),
                (
                    "switch_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sutclient.switchconfig",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="switchconfig",
            name="switches",
            field=models.ManyToManyField(to="sutclient.switches"),
        ),
    ]
