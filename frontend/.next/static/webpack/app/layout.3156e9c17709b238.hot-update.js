"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"84968a4866e6\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/OTY3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjg0OTY4YTQ4NjZlNlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/api/apiEndpoints.jsx":
/*!**********************************!*\
  !*** ./src/api/apiEndpoints.jsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst BASE_URL = \"http://127.0.0.1:8000\";\nconsole.log(\"Base URL is :\", BASE_URL);\nconst apiEndpoints = {\n    loginUser: \"\".concat(BASE_URL, \"/user/login/\"),\n    getUsers: \"\".concat(BASE_URL, \"/users\"),\n    // TestCases FetchAPI\n    getTestCases: \"\".concat(BASE_URL, \"/testops/testcase/\"),\n    getTestCaseByID: (id)=>\"\".concat(BASE_URL, \"/testops/testcase\"),\n    createTest: \"\".concat(BASE_URL, \"/tests/create\"),\n    updateTest: (id)=>\"\".concat(BASE_URL, \"/tests/\").concat(id, \"/update\"),\n    deleteTest: (id)=>\"\".concat(BASE_URL, \"/tests/\").concat(id, \"/delete\"),\n    // Add more endpoints as needed\n    getUserVenvs: \"\".concat(BASE_URL, \"/testops/user/venvs/\"),\n    getUserVenvsByID: (id)=>\"\".concat(BASE_URL, \"/testops/user/venvs/\").concat(id),\n    // Config File APIS\n    getSutClientYmlConfigFilesList: \"\".concat(BASE_URL, \"/configuration/sutclientyml/\"),\n    // getSutClientYmlConfigFilesList: `/configuration/sutclientyml/`,\n    getSutClientYmlConfigFileByID: (id)=>\"\".concat(BASE_URL, \"/configuration/sutclientyml/\").concat(id, \"/\"),\n    saveSutClientYmlConfigFile: (id)=>\"\".concat(BASE_URL, \"/configuration/sutclientyml/\").concat(id, \"/\")\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiEndpoints);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkvYXBpRW5kcG9pbnRzLmpzeCIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsV0FBV0MsdUJBQXdDO0FBQ3pERyxRQUFRQyxHQUFHLENBQUMsaUJBQWlCTDtBQUU3QixNQUFNTSxlQUFlO0lBQ2pCQyxXQUFXLEdBQVksT0FBVFAsVUFBUztJQUN2QlEsVUFBVSxHQUFZLE9BQVRSLFVBQVM7SUFDdEIscUJBQXFCO0lBQ3JCUyxjQUFjLEdBQVksT0FBVFQsVUFBUztJQUMxQlUsaUJBQWlCLENBQUNDLEtBQU8sR0FBWSxPQUFUWCxVQUFTO0lBQ3JDWSxZQUFZLEdBQVksT0FBVFosVUFBUztJQUN4QmEsWUFBWSxDQUFDRixLQUFPLEdBQXFCQSxPQUFsQlgsVUFBUyxXQUFZLE9BQUhXLElBQUc7SUFDNUNHLFlBQVksQ0FBQ0gsS0FBTyxHQUFxQkEsT0FBbEJYLFVBQVMsV0FBWSxPQUFIVyxJQUFHO0lBQzVDLCtCQUErQjtJQUMvQkksY0FBYyxHQUFZLE9BQVRmLFVBQVM7SUFDMUJnQixrQkFBa0IsQ0FBQ0wsS0FBTyxHQUFrQ0EsT0FBL0JYLFVBQVMsd0JBQXlCLE9BQUhXO0lBQzVELG1CQUFtQjtJQUNuQk0sZ0NBQWdDLEdBQVksT0FBVGpCLFVBQVM7SUFDNUMsa0VBQWtFO0lBQ2xFa0IsK0JBQStCLENBQUNQLEtBQzVCLEdBQTBDQSxPQUF2Q1gsVUFBUyxnQ0FBaUMsT0FBSFcsSUFBRztJQUNqRFEsNEJBQTRCLENBQUNSLEtBQ3pCLEdBQTBDQSxPQUF2Q1gsVUFBUyxnQ0FBaUMsT0FBSFcsSUFBRztBQUNyRDtBQUVBLCtEQUFlTCxZQUFZQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcGkvYXBpRW5kcG9pbnRzLmpzeD9mNmYzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJBU0VfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQkFDS0VORF9CQVNFX1VSTDtcclxuY29uc29sZS5sb2coXCJCYXNlIFVSTCBpcyA6XCIsIEJBU0VfVVJMKTtcclxuXHJcbmNvbnN0IGFwaUVuZHBvaW50cyA9IHtcclxuICAgIGxvZ2luVXNlcjogYCR7QkFTRV9VUkx9L3VzZXIvbG9naW4vYCxcclxuICAgIGdldFVzZXJzOiBgJHtCQVNFX1VSTH0vdXNlcnNgLFxyXG4gICAgLy8gVGVzdENhc2VzIEZldGNoQVBJXHJcbiAgICBnZXRUZXN0Q2FzZXM6IGAke0JBU0VfVVJMfS90ZXN0b3BzL3Rlc3RjYXNlL2AsXHJcbiAgICBnZXRUZXN0Q2FzZUJ5SUQ6IChpZCkgPT4gYCR7QkFTRV9VUkx9L3Rlc3RvcHMvdGVzdGNhc2VgLFxyXG4gICAgY3JlYXRlVGVzdDogYCR7QkFTRV9VUkx9L3Rlc3RzL2NyZWF0ZWAsXHJcbiAgICB1cGRhdGVUZXN0OiAoaWQpID0+IGAke0JBU0VfVVJMfS90ZXN0cy8ke2lkfS91cGRhdGVgLFxyXG4gICAgZGVsZXRlVGVzdDogKGlkKSA9PiBgJHtCQVNFX1VSTH0vdGVzdHMvJHtpZH0vZGVsZXRlYCxcclxuICAgIC8vIEFkZCBtb3JlIGVuZHBvaW50cyBhcyBuZWVkZWRcclxuICAgIGdldFVzZXJWZW52czogYCR7QkFTRV9VUkx9L3Rlc3RvcHMvdXNlci92ZW52cy9gLFxyXG4gICAgZ2V0VXNlclZlbnZzQnlJRDogKGlkKSA9PiBgJHtCQVNFX1VSTH0vdGVzdG9wcy91c2VyL3ZlbnZzLyR7aWR9YCxcclxuICAgIC8vIENvbmZpZyBGaWxlIEFQSVNcclxuICAgIGdldFN1dENsaWVudFltbENvbmZpZ0ZpbGVzTGlzdDogYCR7QkFTRV9VUkx9L2NvbmZpZ3VyYXRpb24vc3V0Y2xpZW50eW1sL2AsXHJcbiAgICAvLyBnZXRTdXRDbGllbnRZbWxDb25maWdGaWxlc0xpc3Q6IGAvY29uZmlndXJhdGlvbi9zdXRjbGllbnR5bWwvYCxcclxuICAgIGdldFN1dENsaWVudFltbENvbmZpZ0ZpbGVCeUlEOiAoaWQpID0+XHJcbiAgICAgICAgYCR7QkFTRV9VUkx9L2NvbmZpZ3VyYXRpb24vc3V0Y2xpZW50eW1sLyR7aWR9L2AsXHJcbiAgICBzYXZlU3V0Q2xpZW50WW1sQ29uZmlnRmlsZTogKGlkKSA9PlxyXG4gICAgICAgIGAke0JBU0VfVVJMfS9jb25maWd1cmF0aW9uL3N1dGNsaWVudHltbC8ke2lkfS9gLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBpRW5kcG9pbnRzO1xyXG4iXSwibmFtZXMiOlsiQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQkFDS0VORF9CQVNFX1VSTCIsImNvbnNvbGUiLCJsb2ciLCJhcGlFbmRwb2ludHMiLCJsb2dpblVzZXIiLCJnZXRVc2VycyIsImdldFRlc3RDYXNlcyIsImdldFRlc3RDYXNlQnlJRCIsImlkIiwiY3JlYXRlVGVzdCIsInVwZGF0ZVRlc3QiLCJkZWxldGVUZXN0IiwiZ2V0VXNlclZlbnZzIiwiZ2V0VXNlclZlbnZzQnlJRCIsImdldFN1dENsaWVudFltbENvbmZpZ0ZpbGVzTGlzdCIsImdldFN1dENsaWVudFltbENvbmZpZ0ZpbGVCeUlEIiwic2F2ZVN1dENsaWVudFltbENvbmZpZ0ZpbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/apiEndpoints.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/api/base_api.jsx":
/*!******************************!*\
  !*** ./src/api/base_api.jsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   baseBackendApi: function() { return /* binding */ baseBackendApi; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nconst BACKEND_BASE_URL = \"http://127.0.0.1:8000\";\nconsole.log(\"Backend base URL is in baseAPI :\", BACKEND_BASE_URL);\n// Create an Axios instance with a base URL\nconst baseBackendApi = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: BACKEND_BASE_URL\n});\n// Utility sleep function (in milliseconds)\n// const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nfunction isValidRedirectUrl(url) {\n    // Define allowed paths\n    const allowedPaths = [\n        \"/user/dashboard\",\n        \"/profile\",\n        \"/settings\"\n    ];\n    // Check if URL is within allowed paths or if the root \"/\"\n    return allowedPaths.includes(url) || url === \"/\";\n}\n// Intercept request to include access token\nbaseBackendApi.interceptors.request.use((config)=>{\n    console.log(\"Backend base URL is :\", baseBackendApi);\n    const accessToken = sessionStorage.getItem(\"access_token\");\n    // Skip adding the token for login and refresh requests\n    if (config.url.includes(\"/login/\") || config.url.includes(\"api/token/refresh/\")) {\n        return config;\n    }\n    console.log(\"Access token is in request interceptors :\", accessToken);\n    if (accessToken) {\n        config.headers.Authorization = \"Bearer \".concat(accessToken);\n        console.log(\"Access token added to request\");\n    }\n    // Sleep for 2 seconds (2000 ms) to allow time for debugging\n    // sleep(2000);\n    return config;\n}, (error)=>Promise.reject(error));\n// Intercept response for handling 401 and 403 status codes\nbaseBackendApi.interceptors.response.use((response)=>response, async (error)=>{\n    const originalRequest = error.config;\n    const forbiddenStatusCodes = new Set([\n        401,\n        403\n    ]);\n    console.log(\"Original request in response interceptor is: \", originalRequest);\n    console.log(\"Error in response interceptors:\", error);\n    if (!error.response || !forbiddenStatusCodes.has(error.response.status)) {\n        return Promise.reject(error); // For non 401/403 errors\n    }\n    // Handle 401 (Unauthorized)\n    if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n            console.log(\"Since error code is \".concat(error.response.status, \", in try block\"));\n            const newAccessToken = await handleTokenRefresh();\n            sessionStorage.setItem(\"access_token\", newAccessToken); // Store new access token\n            originalRequest.headers.Authorization = \"Bearer \".concat(newAccessToken);\n            return baseBackendApi(originalRequest); // Retry the original request with the new token\n        } catch (refreshError) {\n            console.log(\"Token refresh failed\", refreshError);\n            console.log(\"Token refresh failed response was : \", error.response.status);\n            // Sleep for 2 seconds (2000 ms) to allow time for debugging\n            // await sleep(20000);\n            // Redirect to login page after storing redirect URL\n            redirectToLogin();\n            return Promise.reject(refreshError);\n        }\n    }\n    // Handle 403 (Forbidden)\n    if (error.response.status === 403) {\n        console.log(\"403 Forbidden error, redirecting to login.\");\n        // redirectToLogin();\n        return Promise.reject(error);\n    }\n    return Promise.reject(error);\n});\nconst sleep = (delay)=>new Promise((resolve)=>setTimeout(resolve, delay));\n// Token refresh logic\nconst handleTokenRefresh = async ()=>{\n    const refreshToken = sessionStorage.getItem(\"refresh_token\");\n    if (!refreshToken) {\n        console.log(\"No refresh token available.\");\n        throw new Error(\"Refresh token missing\");\n    }\n    console.log(\"In handleToken, refreshToken is : \".concat(refreshToken));\n    try {\n        const response = await baseBackendApi.post(\"api/token/refresh/\", // { refresh: refreshToken }, // Send the refresh token in the body\n        {\n            withCredentials: true\n        });\n        console.log(\"Token refresh response : \".concat(response.status));\n        sessionStorage.setItem(\"access_token\", response.data.access);\n        console.log(\"Access token stored in the session\");\n        return response.data.access; // Return the new access token\n    } catch (error) {\n        console.error(\"Failed to refresh token\", error);\n        throw error; // Let it propagate to the interceptor\n    }\n};\n// Redirect to login function\nconst redirectToLogin = ()=>{\n    const currentUrl = window.location.pathname + window.location.search;\n    console.log(\"Current URL before redirecting to login: \", currentUrl);\n    sessionStorage.setItem(\"redirect_after_login\", currentUrl);\n    window.location.href = \"/user/login\"; // Redirect to login page\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (baseBackendApi); // headers: {\n //     Authorization: `Bearer ${sessionStorage.getItem(\"access_token\")}`, // If you need to send the access token\n // },\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/base_api.jsx\n"));

/***/ })

});